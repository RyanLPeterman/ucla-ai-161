(load "hw2.lsp")

(cond ((equal (dfs '((A (B)) C (D))) '(A B C D))    (print "Test 1 Success"))
            (t                                            (print "Test 1 Failure")))
(cond ((equal (dfs '((((w)) x) (y z))) '(w x y z))  (print "Test 2 Success"))
            (t                                            (print "Test 2 Failure")))
(cond ((equal (dfid '((A (B)) C (D)) 3) '(C A C D A B C D))
                                                           (print "Test 3 Success"))
            (t                                            (print "Test 3 Failure")))
(cond ((equal (dfid '((A (B)) C (D)) 2) '(C A C D)) (print "Test 4 Success"))
            (t                                            (print "Test 4 Failure")))
(cond ((equal (dfid '((A (B)) C (D)) 1) '(C))       (print "Test 5 Success"))
            (t                                            (print "Test 5 Failure")))
(cond ((equal (dfid '((A (B)) C (D)) 0) NIL)        (print "Test 6 Success"))
            (t                                            (print "Test 6 Failure")))
(cond ((equal (dfid '(A (B C) (D) (E (F G))) 1) '(A))
                                                           (print "Test 7 Success"))
            (t                                            (print "Test 7 Failure")))
(cond ((equal (dfid '(A (B C) (D) (E (F G))) 2) '(A A B C D E))
                                                           (print "Test 8 Success"))
            (t                                            (print "Test 8 Failure")))
(cond ((equal (dfid '(A (B C) (D) (E (F G))) 3) '(A A B C D E A B C D E F G))
                                                           (print "Test 9 Success"))
            (t                                            (print "Test 9 Failure")))
(cond ((= (length (ID-DFS '(3 3 T) 0)) 12)          (print "Test 10 Success"))
            (t                                            (print "Test 10 Failure")))
(cond ((equal (dfid '(A (B C) (((D))) (E (F G))) 3) '(A A B C E A B C E F G))    
                                                           (print "Test 11 Success"))
            (t                                            (print "Test 11 Failure")))
(cond ((equal (dfid '(A (B C) (((D))) (E (F G))) 4) 
                           '(A A B C E A B C E F G A B C D E F G)) (print "Test 12 Success"))
            (t                                            (print "Test 12 Failure")))
